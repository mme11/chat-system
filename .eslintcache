[{"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\index.js":"1","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\App.js":"2","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\reportWebVitals.js":"3","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\Header.js":"4","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\Sidebar.js":"5","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\SidebarOption.js":"6","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\firebase.js":"7","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\GroupChat.js":"8","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\Message.js":"9","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\GroupChatInput.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":955,"mtime":1612226305398,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1352,"mtime":1612229135012,"results":"15","hashOfConfig":"12"},{"size":3203,"mtime":1612228765043,"results":"16","hashOfConfig":"12"},{"size":1040,"mtime":1612229697256,"results":"17","hashOfConfig":"12"},{"size":950,"mtime":1612266622640,"results":"18","hashOfConfig":"12"},{"size":2370,"mtime":1612266929694,"results":"19","hashOfConfig":"12"},{"size":564,"mtime":1612266622040,"results":"20","hashOfConfig":"12"},{"size":2235,"mtime":1612266623199,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1c7ve3m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\index.js",[],["46","47"],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\App.js",["48","49"],"import React, { useState } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport GroupChat from \"./GroupChat\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n\n  return (\n\n    <div className=\"app\">\n      <Router>\n        <Header />\n        <div className=\"app_body\">\n\n          <Sidebar />\n\n          <Switch>\n            {/* {Wildcard} (any path besides main will have this) */}\n            \n            <Route path=\"/groupChat/:groupChatId\">\n              {/* <h1>Chat Window</h1> */}\n              \n              {/* <Chat /> */}\n              <GroupChat />\n            </Route>\n            \n            <Route path=\"/\">\n              <h1>Home</h1>\n            </Route>\n\n          </Switch>\n\n          {/* React-Router Logic -> Chat screen */}\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\reportWebVitals.js",[],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\Header.js",[],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\Sidebar.js",[],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\SidebarOption.js",["50"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './SidebarOption.css';\r\n\r\nfunction SidebarOption({Icon, title, id, onClick, addGroupChatOption}) {\r\n\r\n    const history = useHistory();\r\n//For selecting a Group Chat\r\n    const selectGroupChat = () => {\r\n        if (id) {\r\n            history.push(`/groupChat/${id}`);\r\n        } else {\r\n            history.push(title);\r\n        }\r\n    };\r\n\r\n    \r\n    return (\r\n        //For creating a groupChat: If you click and you have addGroupChat option then, use\r\n        //addGroupChatOption. otherwise use selectGroupChatOption for selecting a groupChat\r\n        <div className=\"sidebarOption\" onClick={onClick}>\r\n            {/* Only render an Icon if an icon exists*/}\r\n            {Icon && <Icon className=\"sidebarOption_icon\"/>}\r\n            {Icon ? (<h3>{title}</h3>) : (\r\n            <h3 className=\"sidebarOption_groupChat\">\r\n            <span className=\"SidebarOption_hash\">#</span> {title} </h3>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption","C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\firebase.js",[],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\GroupChat.js",["51"],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\Message.js",[],"C:\\Users\\VmaxVibes\\Desktop\\Chat System\\chat-system\\src\\GroupChatInput.js",["52"],"import React, { useState } from 'react';\r\nimport \"./GroupChatInput.css\"\r\nimport db from \"./firebase\";\r\n// import { useStateValue } from \"./StateProvider\"\r\nimport firebase from \"firebase\";\r\n\r\nfunction GroupChatInput({groupChatName, groupChatId}) {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (groupChatId) {\r\n            /*\r\n            db.collection('groupChats').doc(groupChatId).collection({\r\n                message: input,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp + \"\",\r\n                // Below line should be changed to 'user.displayName,'\r\n                // once user info is brought using import useStateValue above\r\n                user: \"Display Name\",\r\n                // Below line should be changed to 'user.photoURL,'\r\n                // once user info is brought using import useStateValue above\r\n                userImage: <img src='https://i.pinimg.com/736x/33/32/6d/33326dcddbf15c56d631e374b62338dc.jpg' alt=\"\" />\r\n           \r\n            })\r\n            */\r\n\r\n            db.collection('groupChats').doc(groupChatId).collection('messages')\r\n                .add({\r\n                    message: input,\r\n                    timestamp: Date.now(),\r\n                    // Below line should be changed to 'user.displayName,'\r\n                    // once user info is brought using import useStateValue above\r\n                    user: \"Display Name\",\r\n                    // Below line should be changed to 'user.photoURL,'\r\n                    // once user info is brought using import useStateValue above\r\n                    userImage: 'https://i.pinimg.com/736x/33/32/6d/33326dcddbf15c56d631e374b62338dc.jpg'\r\n                })\r\n           }\r\n        setInput(\"\");\r\n    };\r\n    \r\n    return (\r\n        <div className=\"groupChatInput\">\r\n            <form>\r\n                <input\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                placeholder={`Message #${groupChatName?.toLowerCase()}`}/>\r\n                <button type=\"submit\" onClick={sendMessage}>SEND</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupChatInput;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":9,"column":16,"nodeType":"59","messageId":"60","endLine":9,"endColumn":23},{"ruleId":"57","severity":1,"message":"62","line":9,"column":11,"nodeType":"59","messageId":"60","endLine":9,"endColumn":26},{"ruleId":"57","severity":1,"message":"63","line":3,"column":21,"nodeType":"59","messageId":"60","endLine":3,"endColumn":29},{"ruleId":"57","severity":1,"message":"64","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":16},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'selectGroupChat' is assigned a value but never used.","'Redirect' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]